@model AttendanceSystem.ViewModels.Attendance.AttendanceLocationViewModel

@{
    ViewData["Title"] = "Student Attendance Location";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-info text-white">
            <h4 class="mb-0">@Model.StudentName - @Model.CourseName</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">@Model.Status</dd>
                <dt class="col-sm-3">Marked At</dt>
                <dd class="col-sm-9">@Model.MarkedAt.ToString("g")</dd>
                <dt class="col-sm-3">Latitude</dt>
                <dd class="col-sm-9">@Model.Latitude</dd>
                <dt class="col-sm-3">Longitude</dt>
                <dd class="col-sm-9">@Model.Longitude</dd>
            </dl>
            <div id="map" style="height:400px;width:100%;"></div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var lat = @Model.Latitude;
            var lng = @Model.Longitude;
            var map = L.map('map').setView([lat, lng], 18);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);
            L.marker([lat, lng]).addTo(map)
                .bindPopup('Student Location').openPopup();
            L.circle([@Model.AllowedLatitude, @Model.AllowedLongitude], {
                color: 'green',
                fillColor: '#0f0',
                fillOpacity: 0.1,
                radius: @Model.AllowedRadiusMeters
            }).addTo(map).bindPopup('Allowed Area');
        });
    </script>
}
